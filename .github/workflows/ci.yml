name: "CI"
on:
  pull_request:
  push:
    # filtering branches here prevents duplicate builds from pull_request and push
    branches:
      - main
      - master

env:
  CI: true
  CACHE_PATH: '**/node_modules'

jobs:
  install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/pnpm

  lint_source:
    name: Lint Source
    runs-on: ubuntu-latest
    needs: [install_dependencies]

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: Lints
        run: pnpm lint

  types:
    name: "Type Correctness"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [install_dependencies]
    strategy:
      fail-fast: true
      matrix:
        path:
          - ./ember-apply
          - ./packages/ember/tailwind
          - ./packages/ember/embroider

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - run: cd ${{ matrix.path }} && pnpm tsc --build

  tests:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
    name: "Tests"
    runs-on: "${{ matrix.platform }}"
    needs: [install_dependencies]

    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/pnpm
    - run: |
        pnpm add --global ember-cli
    - name: Tests
      run: pnpm test

  publish:
    name: Release
    runs-on: ubuntu-latest
    if: github.repository == 'NullVoxPopuli/ember-apply' && github.ref == 'refs/heads/main'
    needs:
      - types
      - tests

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          title: "Release Preview"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
            
